{"remainingRequest":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/src/views/Home.vue?vue&type=template&id=fae5bece","dependencies":[{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/src/views/Home.vue","mtime":1664271128708},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/cache-loader/dist/cjs.js","mtime":1663381957340},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/babel-loader/lib/index.js","mtime":1663381957251},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1663381993401},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/cache-loader/dist/cjs.js","mtime":1663381957340},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/vue-loader-v16/dist/index.js","mtime":1663381993401}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iaG9tZSI+CiAgICA8aDE+5YyW57Kn44OV44Ot44O844OB44Oj44O844OI5L2c5oiQ44K344K544OG44OgPC9oMT4KICAgIDxocj4KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4KICAgICAgPHA+44GT44GT44Gn44K344K544OG44Og44Gu5L2/44GE5pa544KS6Ku444CF6Kqs5piO44GX44G+44GZ44Cc44Cc44CcPC9wPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJsb2dpbiI+CiAgICAgIDxsYWJlbCBmb3I9Im5hbWUiPuWQjeWJje+8mjwvbGFiZWw+CiAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ibmFtZSIgdi1tb2RlbD0idXNlck5hbWUiPgogICAgICA8bGFiZWwgZm9yPSJwYXNzd29yZCI+44OR44K544Ov44O844OJ77yaPC9sYWJlbD4KICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJwYXNzd29yZCIgdi1tb2RlbD0idXNlclBhc3MiPgogICAgICA8YnV0dG9uIEBjbGljaz0ic3VibWl0VXNlckRhdGEiPuODreOCsOOCpOODszwvYnV0dG9uPgogICAgPC9kaXY+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/src/views/Home.vue"],"names":[],"mappings":";EAqCE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChnC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/src/views/Home.vue","sourceRoot":"","sourcesContent":["<script setup>\nimport { ref } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport axios from \"axios\"\n\n//変数\nconst userName = ref(\"\")\nconst userPass = ref(\"\")\nconst store = useStore()\nconst router = useRouter()\n\nconst submitUserData = () => {\n  //ユーザーidの生成\n  const userId = Math.floor(1000+Math.random() * 9000)\n  //送信データの生成\n  const userParams = new URLSearchParams()\n  userParams.append('userId', userId)\n  userParams.append('userName', userName.value)\n  userParams.append('userPass', userPass.value)\n  //データをDBに送信\n  axios.post('https://takano.nkmr.io/flowchart_user_post.php', userParams)\n  .then((response)=>{\n    //上手く行った時\n    console.log('status:',response.status)\n  }).catch((error)=>{\n    //失敗した時\n    console.log('err:',error)\n  })\n  //ユーザーデータの保持\n  store.commit(\"setUserData\", { name: userName.value, id: userId })\n  //フローチャート作成ページへ移行\n  router.push('/flowchart')\n}\n</script>\n\n<template>\n  <div class=\"home\">\n    <h1>化粧フローチャート作成システム</h1>\n    <hr>\n    <div class=\"description\">\n      <p>ここでシステムの使い方を諸々説明します〜〜〜</p>\n    </div>\n    <div class=\"login\">\n      <label for=\"name\">名前：</label>\n      <input type=\"text\" id=\"name\" v-model=\"userName\">\n      <label for=\"password\">パスワード：</label>\n      <input type=\"text\" id=\"password\" v-model=\"userPass\">\n      <button @click=\"submitUserData\">ログイン</button>\n    </div>\n  </div>\n</template>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=M+PLUS+Rounded+1c\");\n@import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+JP\");\n.home {\n  width: 800px;\n  height: 1000px;\n  margin: 5px auto;\n  border: 3px solid #3cb371;\n  border-radius: 30px;\n  font-family: \"Noto Sans JP\"; /* \"M PLUS Rounded 1c\" */\n}\nhr {\n  border-top: 3px solid #3cb371;\n}\n.login label, button {\n  margin-left: 10px;\n}\n</style>\n"]}]}