{"remainingRequest":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/babel-loader/lib/index.js!/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/src/views/About.vue?vue&type=template&id=039c5b43","dependencies":[{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/src/views/About.vue","mtime":1663334948628},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/babel.config.js","mtime":1661341671887},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/cache-loader/dist/cjs.js","mtime":1661152140167},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/babel-loader/lib/index.js","mtime":1661150197424},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1661152145340},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/cache-loader/dist/cjs.js","mtime":1661152140167},{"path":"/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/node_modules/vue-loader-v16/dist/index.js","mtime":1661152145340}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgbm9ybWFsaXplUHJvcHMgYXMgX25vcm1hbGl6ZVByb3BzLCBndWFyZFJlYWN0aXZlUHJvcHMgYXMgX2d1YXJkUmVhY3RpdmVQcm9wcywgd2l0aEN0eCBhcyBfd2l0aEN0eCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2sgfSBmcm9tICJ2dWUiOwpjb25zdCBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAic2lkZW1lbnUiCn07CmNvbnN0IF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJ1cGRhdGVFZGdlX19jb250cm9scyIKfTsKCmNvbnN0IF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgibGFiZWwiLCBudWxsLCAibGFiZWw6IiwgLTEKLyogSE9JU1RFRCAqLwopOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW19jcmVhdGVWTm9kZSgkc2V0dXBbIlRvcE1lbnUiXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAiZG5kZmxvdyIsCiAgICBvbkRyb3A6ICRzZXR1cC5vbkRyb3AKICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVWTm9kZSgkc2V0dXBbIkZhY2VJbWFnZSJdKSwgX2NyZWF0ZVZOb2RlKCRzZXR1cFsiTm9kZVNldHRpbmdzIl0pLCBfY3JlYXRlVk5vZGUoJHNldHVwWyJOb2RlRmllbGQiXSldKSwgX2NyZWF0ZVZOb2RlKCRzZXR1cFsiVnVlRmxvdyJdLCB7CiAgICBjbGFzczogImJhc2ljZmxvdyIsCiAgICBtb2RlbFZhbHVlOiAkc2V0dXAuZWxlbWVudHMsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gJGV2ZW50ID0+ICRzZXR1cC5lbGVtZW50cyA9ICRldmVudCksCiAgICAibm9kZS10eXBlcyI6ICRzZXR1cC5ub2RlVHlwZXMsCiAgICAiZGVmYXVsdC16b29tIjogMS41LAogICAgIm1pbi16b29tIjogMC4yLAogICAgIm1heC16b29tIjogNCwKICAgICJmaXQtdmlldy1vbi1pbml0IjogdHJ1ZSwKICAgICJzbmFwLXRvLWdyaWQiOiB0cnVlLAogICAgImNvbm5lY3Rpb24tbW9kZSI6ICRzZXR1cC5Db25uZWN0aW9uTW9kZS5Mb29zZSwKICAgIG9uRHJhZ292ZXI6ICRzZXR1cC5vbkRyYWdPdmVyLAogICAgb25QYW5lUmVhZHk6ICRzZXR1cC5vbkxvYWQsCiAgICBvblNlbGVjdGlvbkRyYWc6ICRzZXR1cC5zZWxlY3RlZERyYWcsCiAgICBvblNlbGVjdGlvbkNvbnRleHRNZW51OiAkc2V0dXAuc2VsZWN0MgogIH0sIHsKICAgICJub2RlLU1ha2UiOiBfd2l0aEN0eChwcm9wcyA9PiBbX2NyZWF0ZVZOb2RlKCRzZXR1cFsiTWFrZU5vZGUiXSwgX25vcm1hbGl6ZVByb3BzKF9ndWFyZFJlYWN0aXZlUHJvcHMocHJvcHMpKSwgbnVsbCwgMTYKICAgIC8qIEZVTExfUFJPUFMgKi8KICAgICldKSwKICAgICJub2RlLUJyYW5jaCI6IF93aXRoQ3R4KHByb3BzID0+IFtfY3JlYXRlVk5vZGUoJHNldHVwWyJCcmFuY2hOb2RlIl0sIF9ub3JtYWxpemVQcm9wcyhfZ3VhcmRSZWFjdGl2ZVByb3BzKHByb3BzKSksIG51bGwsIDE2CiAgICAvKiBGVUxMX1BST1BTICovCiAgICApXSksCiAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbX2NyZWF0ZVZOb2RlKCRzZXR1cFsiQmFja2dyb3VuZCJdLCB7CiAgICAgICJwYXR0ZXJuLWNvbG9yIjogIiMwMDAwMDAiLAogICAgICBnYXA6ICI4IgogICAgfSksIF9jcmVhdGVWTm9kZSgkc2V0dXBbIk1pbmlNYXAiXSksIF9jcmVhdGVWTm9kZSgkc2V0dXBbIkNvbnRyb2xzIl0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICAgIGNsYXNzOiAiY29udHJvbHMiCiAgICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgICBzdHlsZTogewogICAgICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiMxOTE5NzAiLAogICAgICAgICJjb2xvciI6ICJ3aGl0ZSIKICAgICAgfSwKICAgICAgb25DbGljazogJHNldHVwLnJlc2V0VHJhbnNmb3JtCiAgICB9LCAicmVzZXQgdHJhbnNmb3JtIiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgICAgc3R5bGU6IHsKICAgICAgICAiYmFja2dyb3VuZC1jb2xvciI6ICIjOGEyYmUyIiwKICAgICAgICAiY29sb3IiOiAid2hpdGUiCiAgICAgIH0sCiAgICAgIG9uQ2xpY2s6ICRzZXR1cC51cGRhdGVQb3MKICAgIH0sICJ1cGRhdGUgcG9zaXRpb25zIiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgICAgb25DbGljazogJHNldHVwLmxvZ1RvT2JqZWN0CiAgICB9LCAibG9nIHRvT2JqZWN0IiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgICAgc3R5bGU6IHsKICAgICAgICAiYmFja2dyb3VuZC1jb2xvciI6ICIjZmZmYWNkIiwKICAgICAgICAiY29sb3IiOiAiYmxhY2siCiAgICAgIH0sCiAgICAgIG9uQ2xpY2s6ICRzZXR1cC5jb3B5Tm9kZXMKICAgIH0sICJjb3B5IHNlbGVjdGVkIG5vZGVzIildKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19ob2lzdGVkXzMsIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlRWxlbWVudFZOb2RlKCJpbnB1dCIsIHsKICAgICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9ICRldmVudCA9PiAkc2V0dXAudXBkYXRlTGFiZWwgPSAkZXZlbnQpCiAgICB9LCBudWxsLCA1MTIKICAgIC8qIE5FRURfUEFUQ0ggKi8KICAgICksIFtbX3ZNb2RlbFRleHQsICRzZXR1cC51cGRhdGVMYWJlbF1dKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9ICguLi5hcmdzKSA9PiBfY3R4Lm9uRWRnZVVwZGF0ZSAmJiBfY3R4Lm9uRWRnZVVwZGF0ZSguLi5hcmdzKSkKICAgIH0sICLmsbrlrpoiKV0pXSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSwgOAogIC8qIFBST1BTICovCiAgLCBbIm1vZGVsVmFsdWUiLCAiZGVmYXVsdC16b29tIiwgIm1pbi16b29tIiwgImNvbm5lY3Rpb24tbW9kZSJdKV0sIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApXSwgNjQKICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICApOwp9"},{"version":3,"mappings":";;EAiaSA,KAAK,EAAC;;;EAoBJA,KAAK,EAAC;;;gCACTC,oBAAqB,OAArB,EAAqB,IAArB,EAAO,QAAP,EAAa;AAAA;AAAb;;;6DAvBNC,aAAWC,iBAAX,GACAF,oBAkCM,KAlCN,EAkCM;IAlCDD,KAAK,EAAC,SAkCL;IAlCgBI,MAAI,EAAED;EAkCtB,CAlCN,GACEF,oBAIM,KAJN,cAIM,CAHJC,aAAaC,mBAAb,CAGI,EAFJD,aAAgBC,sBAAhB,CAEI,EADJD,aAAaC,mBAAb,CACI,CAJN,GAKAD,aA2BUC,iBA3BV,EA2BU;IA1BRH,KAAK,EAAC,WA0BE;gBA1BmBG,eA0BnB;+DA1BmBA,kBAAQE,OA0B3B;IAzBP,cAAYF,gBAyBL;IAzBiB,gBAAc,GAyB/B;IAzBqC,YAAU,GAyB/C;IAzBqD,YAAU,CAyB/D;IAxBP,oBAAkB,IAwBX;IAxBkB,gBAAc,IAwBhC;IAxBuC,mBAAiBA,sBAAeG,KAwBvE;IAvBPC,UAAQ,EAAEJ,iBAuBH;IAvBgBK,WAAU,EAAEL,aAuB5B;IAvBqCM,eAAc,EAAEN,mBAuBrD;IAvBoEO,sBAAsB,EAAEP;EAuB5F,CA3BV;IAqBa,aAASQ,SAAEC,KACpB,IADyB,CACzBV,aAA2BC,kBAA3B,EAA2BU,oCAATD,KAAS,EAA3B,EAAuB,IAAvB,EAAuB;IAAA;IAAvB,CADyB,CAAP;IAGT,eAAWD,SAAEC,KACtB,IAD2B,CAC3BV,aAA6BC,oBAA7B,EAA6BU,oCAATD,KAAS,EAA7B,EAAyB,IAAzB,EAAyB;IAAA;IAAzB,CAD2B,CAAP;sBAlBtB,MAA8C,CAA9CV,aAA8CC,oBAA9C,EAA8C;MAAlC,iBAAc,SAAoB;MAAVW,GAAG,EAAC;IAAM,CAA9C,CAA8C,EAC9CZ,aAAWC,iBAAX,CAD8C,EAE9CD,aAAYC,kBAAZ,CAF8C,EAG9CF,oBAKM,KALN,EAKM;MALDD,KAAK,EAAC;IAKL,CALN,EAAqB,CACnBC,oBAAyG,QAAzG,EAAyG;MAAjGc,KAAgD,EAAhD;QAAA;QAAA;MAAA,CAAiG;MAA/CC,OAAK,EAAEb;IAAwC,CAAzG,EAAiF,iBAAjF,CADmB,EAEnBF,oBAAqG,QAArG,EAAqG;MAA7Fc,KAAgD,EAAhD;QAAA;QAAA;MAAA,CAA6F;MAA3CC,OAAK,EAAEb;IAAoC,CAArG,EAA4E,kBAA5E,CAFmB,EAGnBF,oBAAkD,QAAlD,EAAkD;MAAzCe,OAAK,EAAEb;IAAkC,CAAlD,EAA6B,cAA7B,CAHmB,EAInBF,oBAAwG,QAAxG,EAAwG;MAAhGc,KAAgD,EAAhD;QAAA;QAAA;MAAA,CAAgG;MAA9CC,OAAK,EAAEb;IAAuC,CAAxG,EAA4E,qBAA5E,CAJmB,CAArB,CAH8C,EAS9CF,oBAIM,KAJN,cAIM,CAHJgB,UAGI,kBAFJhB,oBAA8B,OAA9B,EAA8B;iEAAdE,qBAAWE;IAAG,CAA9B;;IAAA,kBAAgBF,qBAEZ,EADJF,oBAAyC,QAAzC,EAAyC;MAAhCe,OAAK,yCAAEE,+CAAF;IAA2B,CAAzC,EAA8B,IAA9B,CACI,CAJN,CAT8C;;;;GANhD;;EAAA,iEANF;;EAAA","names":["class","_createElementVNode","_createVNode","$setup","onDrop","$event","Loose","onDragover","onPaneReady","onSelectionDrag","onSelectionContextMenu","_withCtx","props","_normalizeProps","gap","style","onClick","_hoisted_3","_ctx"],"sourceRoot":"","sources":["/Users/takanosayaka/Documents/GitHub/makeup_flowchart_vue3/src/views/About.vue"],"sourcesContent":["<script setup>\nimport { Background, Controls, MiniMap, VueFlow, isNode, isEdge, MarkerType, ConnectionMode, useVueFlow, } from '@braks/vue-flow'\nimport { computed, markRaw, ref, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { initialElements } from '../js/initial-elements.js'\n//カスタムノードの追加\nimport MakeNode from '@/components/MakeNode.vue'\nimport BranchNode from '@/components/BranchNode.vue'\n//子コンポーネントの追加\nimport NodeSettings from '@/components/NodeSettings.vue'\nimport FaceImage from '@/components/FaceImage.vue'\nimport NodeField from '@/components/NodeField.vue'\nimport TopMenu from '@/components/TopMenu.vue'\n\n//初期設定\nconst { onPaneReady, onConnect, onEdgesChange, onNodesChange, addEdges, addNodes, setTransform, toObject, project, } = useVueFlow()\nconst elements = ref(initialElements)\n//const elements2 = reactive(elements) reactive,\nconst nodeTypes = {\n  customMake: markRaw(MakeNode),\n  customBranch: markRaw(BranchNode),\n}\nconst store = useStore()\nvar nodeLists = []\nvar edgeLists = []\nvar edgeSNum = [] //sourceから見たedgeの重複 source:[id]\nvar Skeys = [] //source\nvar makeNodeNum = {0: [], 1: [], 2: [], 3: [], 4: [], 5: [], 6: [], 7: []}\n\n//最初に一度ノード・エッジのリストを得る\nonMounted(() => {\n  surveySource()\n  changeAllEdgesType()\n  checkMakeNodes()\n})\n/* ノードとエッジの調査 */\nconst surveySource = () => {\n  //登録済みのエッジの出自関係を探る\n  elements.value.forEach((el) => {\n    if(isNode(el)){\n      nodeLists.push(el) //ノード情報の取得\n    }\n    if (isEdge(el)) {\n      edgeLists.push(el) //エッジ情報の取得\n      Skeys = Object.keys(edgeSNum)\n      var tempsource = el.source\n      if(Skeys.includes(tempsource)){\n        edgeSNum[tempsource].push(el.id)\n      }else{\n        edgeSNum[tempsource] = []\n        edgeSNum[tempsource].push(el.id)\n      }\n    }\n  })\n  Skeys = Object.keys(edgeSNum) //最終ループ分のkeyの更新\n}\nconst changeAllEdgesType = () => {\n  elements.value.forEach((el) => {\n    if (isEdge(el)) {\n      //sourceが同じものが2つ以上あるか\n      var tempS = edgeSNum[el.source]\n      if(tempS.length >= 2){\n        el.type = \"smoothstep\"\n      }else{\n        el.type = \"straight\"\n      }\n    }\n  })\n}\n/* メイクノードの調査 */\nconst changeMakeNodes = (nodeData) => {\n  if(nodeData.type == \"add\"){\n    makeNodeNum[nodeData.imgNum].push(nodeData.id)\n  }else if(nodeData.type == \"remove\"){\n    var lengthNum = makeNodeNum[nodeData.imgNum]\n    for(var n=0; n<lengthNum.length; n++){\n      if(lengthNum[n] == nodeData.id){\n        makeNodeNum[nodeData.imgNum].splice(n, 1)\n      }\n    }\n  }else{\n    return\n  }\n  for(var l=0; l<Object.keys(makeNodeNum).length; l++){\n    var tempLengthNum = makeNodeNum[l]\n    if(tempLengthNum.length >= 1){\n      store.commit(\"setMakeNodeList\", {imgNum:l, imgState: true})\n    }else{\n      store.commit(\"setMakeNodeList\", {imgNum:l, imgState: false})\n    }\n  }\n}\nconst checkMakeNodes = () => {\n  elements.value.forEach((el) => {\n    if (isNode(el) && el.type == \"customMake\") {\n      if(el.data.partNum == 1 && el.data.itemNum == 8){\n        changeMakeNodes({imgNum: 0, id: el.id, type: \"add\"})\n      }else if(el.data.partNum == 1 && el.data.itemNum == 8 && el.data.typeNum == 2){\n        changeMakeNodes({imgNum: 1, id: el.id, type: \"add\"})\n      }else if(el.data.partNum == 2 && el.dataitemNum == 11){\n        changeMakeNodes({imgNum: 2, id: el.id, type: \"add\"})\n      }else if(el.data.partNum == 2 && (13 <= el.data.itemNum && el.data.itemNum <= 16)){\n        changeMakeNodes({imgNum: 3, id: el.id, type: \"add\"})\n      }else if(el.data.partNum == 2 && (17 <= el.data.itemNum && el.data.itemNum <= 20)){\n        changeMakeNodes({imgNum: 4, id: el.id, type: \"add\"})\n      }else if(el.data.partNum == 4 && el.data.itemNum == 24){\n        changeMakeNodes({imgNum: 5, id: el.id, type: \"add\"})\n      }else if(el.data.partNum == 4 && el.data.itemNum == 25){\n        changeMakeNodes({imgNum: 6, id: el.id, type: \"add\"})\n      }else if(el.data.partNum == 0 && el.data.itemNum == 22){\n        changeMakeNodes({imgNum: 7, id: el.id, type: \"add\"})\n      }else{\n        return\n      }\n    }\n  })\n}\n\n/* 起動時の挙動 */\n//onPaneReadyは、viewpaneとノードに表示可能なディメンションがある場合に呼び出されます\nonPaneReady(({fitView}) => {\n  fitView()\n})\nconst onLoad = (flowInstance) => flowInstance.fitView()\n//onNodeDragStop, onNodeDragStop(() => console.log('drag stop'))\nconst onDragOver = (event) => {\n  console.log(event)\n  event.preventDefault()\n  if (event.dataTransfer) {\n    event.dataTransfer.dropEffect = 'move'\n  }\n}\n\n//対象エッジと同じノードから出ているエッジの本数\nconst surveySameSource = (source) => {\n  if(Skeys.includes(source)){\n    var temp2 = edgeSNum[source]\n    return temp2.length\n  }else{\n    return 0\n  }\n}\n\nconst changeEdges = (edge, type) => {\n  var id = edge.id\n  var source = edge.source\n  if(type == \"add\"){\n    edgeLists.push(edge)\n    if(Skeys.includes(source)){\n      edgeSNum[source].push(id)\n    }else{\n      edgeSNum[source] = []\n      edgeSNum[source].push(id)\n    }\n  }else if(type == \"remove\"){\n    for(var i=0; i<edgeLists.length; i++){\n      if(edgeLists[i].id == id){\n        edgeLists.splice(i, 1) //<配列>.splice(<始まりのインデックス>, <削除する要素数>)\n      }\n    }\n    const sameEdgeSNum = edgeSNum[source]\n    if(sameEdgeSNum.length >= 2){\n      for(var j=0; j<sameEdgeSNum.length; j++){\n        if(sameEdgeSNum[j] == id){\n          edgeSNum[source].splice(j, 1)\n        }\n      }\n    }else{\n      delete edgeSNum[source]\n      Skeys = Object.keys(edgeSNum)\n    }\n  }else if(type == \"change\"){\n    console.log(elements.value)\n  }else{\n    return\n  }\n}\n\nonNodesChange((params) => {\n  for(var q=0; q<params.length; q++){\n    if(params[q].type == \"add\"){\n      var nodeitems = params[q].item\n      var nodeData = nodeitems.data\n      //化粧工程の判定\n      if(nodeData.partNum == 1 && nodeData.itemNum == 8){\n        changeMakeNodes({imgNum: 0, id: nodeitems.id, type: \"add\"})\n      }else if(nodeData.partNum == 1 && nodeData.itemNum == 8 && nodeData.typeNum == 2){\n        changeMakeNodes({imgNum: 1, id: nodeitems.id, type: \"add\"})\n      }else if(nodeData.partNum == 2 && nodeData.itemNum == 11){\n        changeMakeNodes({imgNum: 2, id: nodeitems.id, type: \"add\"})\n      }else if(nodeData.partNum == 2 && (13 <= nodeData.itemNum && nodeData.itemNum <= 16)){\n        changeMakeNodes({imgNum: 3, id: nodeitems.id, type: \"add\"})\n      }else if(nodeData.partNum == 2 && (17 <= nodeData.itemNum && nodeData.itemNum <= 20)){\n        changeMakeNodes({imgNum: 4, id: nodeitems.id, type: \"add\"})\n      }else if(nodeData.partNum == 4 && nodeData.itemNum == 24){\n        changeMakeNodes({imgNum: 5, id: nodeitems.id, type: \"add\"})\n      }else if(nodeData.partNum == 4 && nodeData.itemNum == 25){\n        changeMakeNodes({imgNum: 6, id: nodeitems.id, type: \"add\"})\n      }else if(nodeData.partNum == 0 && nodeData.itemNum == 22){\n        changeMakeNodes({imgNum: 7, id: nodeitems.id, type: \"add\"})\n      }else{\n        return\n      }\n    }else if(params[q].type == \"remove\"){\n      elements.value.forEach((el) => {\n        if(isNode(el) && el.id == params[q].id){\n          if(el.data.partNum == 1 && el.data.itemNum == 8){\n            changeMakeNodes({imgNum: 0, id: params[q].id, type: \"remove\"})\n          }else if(el.data.partNum == 1 && el.data.itemNum == 8 && el.data.typeNum == 2){\n            changeMakeNodes({imgNum: 1, id: params[q].id, type: \"remove\"})\n          }else if(el.data.partNum == 2 && el.data.itemNum == 11){\n            changeMakeNodes({imgNum: 2, id: params[q].id, type: \"remove\"})\n          }else if(el.data.partNum == 2 && (13 <= el.data.itemNum && el.data.itemNum <= 16)){\n            changeMakeNodes({imgNum: 3, id: params[q].id, type: \"remove\"})\n          }else if(el.data.partNum == 2 && (17 <= el.data.itemNum && el.data.itemNum <= 20)){\n            changeMakeNodes({imgNum: 4, id: params[q].id, type: \"remove\"})\n          }else if(el.data.partNum == 4 && el.data.itemNum == 24){\n            changeMakeNodes({imgNum: 5, id: params[q].id, type: \"remove\"})\n          }else if(el.data.partNum == 4 && el.data.itemNum == 25){\n            changeMakeNodes({imgNum: 6, id: params[q].id, type: \"remove\"})\n          }else if(el.data.partNum == 0 && el.data.itemNum == 22){\n            changeMakeNodes({imgNum: 7, id: params[q].id, type: \"remove\"})\n          }else{\n            return\n          }\n        }\n      })\n    }else{\n      return\n    }\n  }\n})\n\nonEdgesChange((params) => {\n  var NumOfSameSources\n  for(var i=0; i<params.length; i++){\n    if(params[i].type == \"remove\"){\n      var source\n      var edgeData\n      //消すエッジと同じsourceのエッジが何本あるか調べる\n      for(var j=0; j<edgeLists.length; j++){\n        if (edgeLists[j].id == params[i].id) {\n          edgeData = edgeLists[j]\n          source = edgeLists[j].source\n          NumOfSameSources = surveySameSource(source)\n        }\n      }\n      //エッジが現状で2本以下だったらエッジをstraightに切り替える\n      if(NumOfSameSources == 2){\n        elements.value.forEach((el) => {\n          if (isEdge(el) && el.source == source) {\n            el.type = \"straight\"\n          }\n        })\n        //edgeListの状態変更\n        changeEdges(edgeData, \"change\")\n      }\n      console.log(elements.value)\n    }else if(params[i].type == \"add\"){\n     //追加するエッジと同じsourceのエッジが何本あるか調べる\n     NumOfSameSources = surveySameSource(params[i].item.source)\n     //エッジが現状で1本以上あったらエッジをsmoothstepに切り替える\n     if(NumOfSameSources >= 1){\n       elements.value.forEach((el) => {\n         if (isEdge(el) && el.source == params[i].item.source) {\n           el.type = \"smoothstep\"\n         }\n       })\n     }\n   }else{\n    return\n   }\n  }\n})\n\nonConnect((params) => {\n  console.log(\"エッジの追加\")\n  //これから登録するエッジの出自を取る **ここ変える\n  var NumOfEdge\n  if(Skeys.includes(params.source)){\n    edgeSNum[params.source].push(params.id)\n    NumOfEdge = surveySameSource(params.source) +1\n  }else{\n    edgeSNum[params.source] = []\n    edgeSNum[params.source].push(params.id)\n    NumOfEdge = 1\n  }\n\n  // 新しいエッジの追加\n  var newEdge\n  const getEdgeId = () => `e${params.source}_${params.target}`\n  if(params.source.indexOf('make') > -1){\n    //customMakeだったら\n    newEdge = {\n      id: getEdgeId(),\n      source: params.source,\n      target: params.target,\n      type: NumOfEdge>1 ? 'smoothstep' : 'straight',\n      markerEnd: MarkerType.ArrowClosed,\n      updatable: true,\n      events: {\n        click: (event) => {\n          console.log(event.edge.label)\n        },\n      }\n    }\n  }else if(params.source.indexOf('branch') > -1){\n    //customBranchだったら\n    newEdge = {\n      id: getEdgeId(),\n      source: params.source,\n      target: params.target,\n      label: edgeSNum%2 == 0 ? \"No\" : \"Yes\",\n      style: { stroke: 'red' },\n      labelStyle: { fill: 'white' },\n      labelBgStyle: { fill: edgeSNum%2 == 0 ? 'blue' : 'red' },\n      type: 'smoothstep',\n      markerEnd: MarkerType.ArrowClosed,\n      updatable: true,\n      events: {\n        click: (event) => {\n          console.log(event.edge.label)\n        },\n      }\n    }\n  }else{\n    //input/outputだったら\n    newEdge = {\n      id: getEdgeId(),\n      source: params.source,\n      target: params.target,\n      type: NumOfEdge>1 ? 'smoothstep' : 'straight',\n      markerEnd: MarkerType.ArrowClosed,\n      updatable: true,\n    }\n  }\n  addEdges([newEdge])\n})\n\n/*\n * nodeのプロパティを更新するには、要素のv-modelを使用して要素を直接変更するだけです\n * 要素を上書きする必要なく、変更は常にグラフに反応的に反映される必要があります\n*/\n\n//vueFlow上のボタン操作\n//現在のviewpaneの変換 (ズームとパン) をリセット\nconst resetTransform = () => setTransform({ x: 0, y: 0, zoom: 1 })\n//ノードの位置をランダムに更新\nconst updatePos = () => {\n  elements.value.forEach((el) => {\n    if (isNode(el)) {\n      el.position = {\n        x: Math.random() * 400,\n        y: Math.random() * 400,\n      }\n    }\n  })\n}\n//toObjectは、現在のグラフデータを簡単に永続化できるオブジェクトに変換します\nconst logToObject = () => console.log(toObject())\n//選択したノードをコピーする\nconst copyNodes = () => {\n  console.log(\"選択したもの\")\n}\n\n\nconst updateLabel = computed({\n  get: () => store.state.label,\n  set: (value) => store.commit(\"setLabel\", value)\n})\n\nlet id = 0\nconst ss_getId = () => `ss_${id++}`\nconst m_getId = () => `make_${id++}`\nconst b_getId = () => `branch_${id++}`\nconst onDrop = (event) => {\n  const type = event.dataTransfer?.getData('application/vueflow')\n  const position = project({ x: event.clientX - 400, y: event.clientY - 150 })\n  var newNode\n  if(type == 'input' || type == 'output'){\n    //開始ノードか終了ノード\n    newNode = {\n      id: ss_getId(),\n      type,\n      position,\n      label: type == 'input' ? `メイク開始` : `メイク終了`,\n    }\n  }else{\n    newNode = {\n      id: type == 'customMake' ? m_getId() : b_getId(),\n      type,\n      position,\n      label: store.state.itemName+\"(\"+store.state.typeName+\")\",\n      data: {\n        partName: store.state.partName,\n        partNum: store.state.partNum,\n        itemName: store.state.itemName,\n        itemNum: store.state.itemNum,\n        typeName: store.state.typeName,\n        typeNum: store.state.typeNum,\n      }\n    }\n  }\n  addNodes([newNode])\n}\n\nconst selectedDrag = (params) =>{\n  console.log(params)\n}\nconst select2 = (params) => {\n  console.log(params)\n}\n</script>\n\n<template>\n  <TopMenu />\n  <div class=\"dndflow\" @drop=\"onDrop\">\n    <div class=\"sidemenu\">\n      <FaceImage />\n      <NodeSettings />\n      <NodeField />\n    </div>\n    <VueFlow\n      class=\"basicflow\" v-model=\"elements\"\n      :node-types=\"nodeTypes\" :default-zoom=\"1.5\" :min-zoom=\"0.2\" :max-zoom=\"4\"\n      :fit-view-on-init=\"true\" :snap-to-grid=\"true\" :connection-mode=\"ConnectionMode.Loose\"\n      @dragover=\"onDragOver\" @pane-ready=\"onLoad\" @selection-drag=\"selectedDrag\" @selection-context-menu=\"select2\"\n    >\n      <Background pattern-color=\"#000000\" gap=\"8\" />\n      <MiniMap />\n      <Controls />\n      <div class=\"controls\">\n        <button style=\"background-color: #191970; color: white;\" @click=\"resetTransform\">reset transform</button>\n        <button style=\"background-color: #8a2be2; color: white;\" @click=\"updatePos\">update positions</button>\n        <button @click=\"logToObject\">log toObject</button>\n        <button style=\"background-color: #fffacd; color: black;\" @click=\"copyNodes\">copy selected nodes</button>\n      </div>\n      <div class=\"updateEdge__controls\">\n        <label>label:</label>\n        <input v-model=\"updateLabel\"/>\n        <button @click=\"onEdgeUpdate\">決定</button>\n      </div>\n      <!--カスタムノードの設定-->\n      <template #node-Make=\"props\">\n        <MakeNode v-bind=\"props\" />\n      </template>\n      <template #node-Branch=\"props\">\n        <BranchNode v-bind=\"props\" />\n      </template>\n    </VueFlow>\n  </div>\n</template>\n\n<style>\n@import '../css/flowchart.css';\n</style>"]}]}