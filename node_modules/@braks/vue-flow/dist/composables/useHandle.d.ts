import type { Connection, Getters, GraphEdge, HandleType, ValidConnectionFunc } from '../types'
import type { ConnectionMode } from '../types'
interface Result {
  elementBelow: Element | null
  isValid: boolean
  connection: Connection
  isHoveringHandle: boolean
}
export declare const checkElementBelowIsValid: (
  event: MouseEvent,
  connectionMode: ConnectionMode,
  isTarget: boolean,
  nodeId: string,
  handleId: string | null,
  isValidConnection: ValidConnectionFunc,
  doc: Document,
  edges: GraphEdge[],
  getNode: Getters['getNode'],
) => Result
declare const _default: () => {
  onMouseDown: (
    event: MouseEvent,
    handleId: string | null,
    nodeId: string,
    isTarget: boolean,
    isValidConnection?: ValidConnectionFunc,
    elementEdgeUpdaterType?: HandleType,
    onEdgeUpdate?: ((connection: Connection) => void) | undefined,
    onEdgeUpdateEnd?: () => void,
  ) => void
  onClick: (
    event: MouseEvent,
    handleId: string | null,
    nodeId: string,
    handleType: HandleType,
    isValidConnection?: ValidConnectionFunc,
  ) => void
}
export default _default
